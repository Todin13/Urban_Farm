version: '3.8'
services:
  sensor1:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=1
  sensor2:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=2
  sensor3:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=3
  sensor4:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=4
  sensor5:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=5
  sensor6:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=6
  sensor7:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=7
  sensor8:
    image: abelfodil/sensor:0.0.1
    network_mode: "host"
    environment:
      - SERVER_URL=http://localhost:8080/receive
      - SCENARIO_ID=8
  # sensorCustom:
  #   image: abelfodil/sensor:0.0.1
  #   network_mode: "host"
  #   environment:
  #     - SERVER_URL=http://localhost:8080/receive
  #     - PLANT_ID=12
  #     - SENSOR_ID=88712531
  #     - SENSOR_VERSION=FR-v7
  #     - PERIOD=2s
  #     - MEASURES=temperature:285.15°K,temperature:286.15°K,humidity:12%
 
  urbanfarm:
    image: warnex/urbanfarm_0.10
    ports:
      - "8090:8090"
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=urbanfarm
      - DB_USER=admin
      - DB_PASS=urbanfarm123
    depends_on:
      - database
    restart: unless-stopped
    command: ["./UrbanFarm"]  # Keep the container running
    
  collecte_donnees:
    image: todin13/api-data-collection:0.1.0
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=urbanfarm
      - DB_USER=admin
      - DB_PASSWORD=urbanfarm123
      - API_PATH=/receive
      - API_HOST=0.0.0.0
      - API_PORT=8080

  web_interface:
    image: todin13/web-interface:0.1.0
    ports:
      - 8501-8501
    depends_on:
      - database
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_DB=urbanfarm
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=urbanfarm123

  database:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: urbanfarm
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: urbanfarm123
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./src/database/urbanfarm_schema.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped  # This line should be indented to be part of the database service

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "80:80"
    depends_on:
      - database
    restart: unless-stopped  # This line should be indented to be part of the pgadmin service

volumes:
  db-data: